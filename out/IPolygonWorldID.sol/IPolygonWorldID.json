{"abi":[{"type":"function","name":"receiveRoot","inputs":[{"name":"newRoot","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"receiveRoot(uint256)":"fbde929b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRoot\",\"type\":\"uint256\"}],\"name\":\"receiveRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Worldcoin\",\"custom:usage\":\"abi.encodeCall(IPolygonWorldID.receiveRoot, (_newRoot, _supersedeTimestamp));\",\"kind\":\"dev\",\"methods\":{\"receiveRoot(uint256)\":{\"custom:reverts\":\"CannotOverwriteRoot If the root already exists in the root history.string If the caller is not the owner.\",\"params\":{\"newRoot\":\"The value of the new root.\"}}},\"title\":\"Interface for the PolygonWorldID contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveRoot(uint256)\":{\"notice\":\"This function is called by the state bridge contract when it forwards a new root to         the bridged WorldID.\"}},\"notice\":\"Interface for the CrossDomainOwnable contract for the Optimism L2\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IPolygonWorldID.sol\":\"IPolygonWorldID\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@eth-optimism/contracts-bedrock/=node_modules/@eth-optimism/contracts-bedrock/\",\":@eth-optimism/contracts/=node_modules/@eth-optimism/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@rari-capital/solmate/=lib/solmate/\",\":@scroll-tech/contracts/=node_modules/@scroll-tech/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":fx-portal/contracts/=lib/contracts/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solmate/=lib/solmate/\",\":src/=src/\"]},\"sources\":{\"src/interfaces/IPolygonWorldID.sol\":{\"keccak256\":\"0x125b6665145d07c8653564629838c9c43096fa4c3576ffbcf6317782b4db6dc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac9f8d47fec69bacab6bfeca53227d6211a7686ec8e884e52805139386c8d9ea\",\"dweb:/ipfs/QmUMX4nbRwMZeJqa1ztn4tF1T7nLhj8t5QXu9QfqWAHgud\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.16+commit.07a7930e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"newRoot","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"receiveRoot"}],"devdoc":{"kind":"dev","methods":{"receiveRoot(uint256)":{"custom:reverts":"CannotOverwriteRoot If the root already exists in the root history.string If the caller is not the owner.","params":{"newRoot":"The value of the new root."}}},"version":1},"userdoc":{"kind":"user","methods":{"receiveRoot(uint256)":{"notice":"This function is called by the state bridge contract when it forwards a new root to         the bridged WorldID."}},"version":1}},"settings":{"remappings":["@eth-optimism/contracts-bedrock/=node_modules/@eth-optimism/contracts-bedrock/","@eth-optimism/contracts/=node_modules/@eth-optimism/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@prb/test/=lib/prb-test/src/","@rari-capital/solmate/=lib/solmate/","@scroll-tech/contracts/=node_modules/@scroll-tech/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","fx-portal/contracts/=lib/contracts/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","prb-test/=lib/prb-test/src/","solmate/=lib/solmate/","src/=src/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/interfaces/IPolygonWorldID.sol":"IPolygonWorldID"},"evmVersion":"london","libraries":{}},"sources":{"src/interfaces/IPolygonWorldID.sol":{"keccak256":"0x125b6665145d07c8653564629838c9c43096fa4c3576ffbcf6317782b4db6dc6","urls":["bzz-raw://ac9f8d47fec69bacab6bfeca53227d6211a7686ec8e884e52805139386c8d9ea","dweb:/ipfs/QmUMX4nbRwMZeJqa1ztn4tF1T7nLhj8t5QXu9QfqWAHgud"],"license":"MIT"}},"version":1},"id":25}