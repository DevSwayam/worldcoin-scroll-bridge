{"abi":[{"type":"function","name":"isLocal","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"messenger","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IL2ScrollMessenger"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"_owner","type":"address","internalType":"address"},{"name":"_isLocal","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"},{"name":"isLocal","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"isLocal()":"0ee04629","messenger()":"3cb747bf","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","transferOwnership(address,bool)":"b242e534"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLocal\",\"type\":\"bool\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isLocal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"contract IL2ScrollMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLocal\",\"type\":\"bool\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Worldcoin, OPLabsPBC\",\"details\":\"Fork of CrossDomainOwnable3 from @eth-optimism/contracts-bedrock/contracts/L2/CrossDomainOwnable3\",\"events\":{\"OwnershipTransferred(address,address,bool)\":{\"params\":{\"isLocal\":\"Configures the `isLocal` contract variable.\",\"newOwner\":\"The new owner of the contract.\",\"previousOwner\":\"The previous owner of the contract.\"}}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferOwnership(address,bool)\":{\"params\":{\"_isLocal\":\"Configures the locality of the ownership.\",\"_owner\":\"The new owner of the contract.\"}}},\"stateVariables\":{\"scrollMessengerAddress\":{\"details\":\"Sepolia address on Scroll for the L2ScrollMessenger: https://docs.scroll.io/en/developers/scroll-contracts/\"}},\"title\":\"SrollCrossDomainOwnable\",\"version\":1},\"userdoc\":{\"events\":{\"OwnershipTransferred(address,address,bool)\":{\"notice\":\"Emits when ownership of the contract is transferred. Includes the         isLocal field in addition to the standard `Ownable` OwnershipTransferred event.\"}},\"kind\":\"user\",\"methods\":{\"isLocal()\":{\"notice\":\"If true, the contract uses the cross domain _checkOwner function override.         If false it uses the standard Ownable _checkOwner function.\"},\"transferOwnership(address,bool)\":{\"notice\":\"Allows for ownership to be transferred with specifying the locality.\"}},\"notice\":\"This contract extends the OpenZeppelin `Ownable` contract for L2 contracts to be owned         by contracts on either L1 or L2. Note that this contract is meant to be used with         systems that use the ScrollMessenger system.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ScrollCrossDomainOwnable.sol\":\"ScrollCrossDomainOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@eth-optimism/contracts-bedrock/=node_modules/@eth-optimism/contracts-bedrock/\",\":@eth-optimism/contracts/=node_modules/@eth-optimism/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@rari-capital/solmate/=lib/solmate/\",\":@scroll-tech/contracts/=node_modules/@scroll-tech/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":fx-portal/contracts/=lib/contracts/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solmate/=lib/solmate/\",\":src/=src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@scroll-tech/contracts/L2/IL2ScrollMessenger.sol\":{\"keccak256\":\"0xf26de78c06c12c50074f3d8498224ffb12374eb0007954c2893e6fa8704215ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://716a1441871a3a922f4f8da2c06c6bf9e030fb26bd85d609ee777b55031ed51d\",\"dweb:/ipfs/QmQ4ywRhjaFZCnE8Ffhj1artfgEGRCDSdF35uv7PjvnqG5\"]},\"node_modules/@scroll-tech/contracts/libraries/IScrollMessenger.sol\":{\"keccak256\":\"0x5a39de18b5912b62614eba49a0381b84e57bc339d00cc8b5e1da1adab457ee41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f7959447ca88e7fba1b1cfe3f0c7c26284a5f750f30f01b9f4ac4001b4861bd\",\"dweb:/ipfs/QmPzByeNMPkzZTFd1GLJHF2diCL1AdTE1LRdfp4nS7zxGX\"]},\"src/ScrollCrossDomainOwnable.sol\":{\"keccak256\":\"0x85a4aa57f5f453190af9d65dc7014c0845390accf1154516b4583018a6196913\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://895464c5290a1506761945f256a5297465b4cb768dbb7ca4d76da88422ef51cb\",\"dweb:/ipfs/QmdH5yDiLyKmfs5iLqjbvgKDBsoWty6Wv9MMUWzhJDt4jP\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.16+commit.07a7930e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true},{"internalType":"bool","name":"isLocal","type":"bool","indexed":false}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"isLocal","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"messenger","outputs":[{"internalType":"contract IL2ScrollMessenger","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"bool","name":"_isLocal","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferOwnership(address,bool)":{"params":{"_isLocal":"Configures the locality of the ownership.","_owner":"The new owner of the contract."}}},"version":1},"userdoc":{"kind":"user","methods":{"isLocal()":{"notice":"If true, the contract uses the cross domain _checkOwner function override.         If false it uses the standard Ownable _checkOwner function."},"transferOwnership(address,bool)":{"notice":"Allows for ownership to be transferred with specifying the locality."}},"version":1}},"settings":{"remappings":["@eth-optimism/contracts-bedrock/=node_modules/@eth-optimism/contracts-bedrock/","@eth-optimism/contracts/=node_modules/@eth-optimism/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@prb/test/=lib/prb-test/src/","@rari-capital/solmate/=lib/solmate/","@scroll-tech/contracts/=node_modules/@scroll-tech/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","fx-portal/contracts/=lib/contracts/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","prb-test/=lib/prb-test/src/","solmate/=lib/solmate/","src/=src/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/ScrollCrossDomainOwnable.sol":"ScrollCrossDomainOwnable"},"evmVersion":"london","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673","urls":["bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2","dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7","urls":["bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92","dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"],"license":"MIT"},"node_modules/@scroll-tech/contracts/L2/IL2ScrollMessenger.sol":{"keccak256":"0xf26de78c06c12c50074f3d8498224ffb12374eb0007954c2893e6fa8704215ed","urls":["bzz-raw://716a1441871a3a922f4f8da2c06c6bf9e030fb26bd85d609ee777b55031ed51d","dweb:/ipfs/QmQ4ywRhjaFZCnE8Ffhj1artfgEGRCDSdF35uv7PjvnqG5"],"license":"MIT"},"node_modules/@scroll-tech/contracts/libraries/IScrollMessenger.sol":{"keccak256":"0x5a39de18b5912b62614eba49a0381b84e57bc339d00cc8b5e1da1adab457ee41","urls":["bzz-raw://4f7959447ca88e7fba1b1cfe3f0c7c26284a5f750f30f01b9f4ac4001b4861bd","dweb:/ipfs/QmPzByeNMPkzZTFd1GLJHF2diCL1AdTE1LRdfp4nS7zxGX"],"license":"MIT"},"src/ScrollCrossDomainOwnable.sol":{"keccak256":"0x85a4aa57f5f453190af9d65dc7014c0845390accf1154516b4583018a6196913","urls":["bzz-raw://895464c5290a1506761945f256a5297465b4cb768dbb7ca4d76da88422ef51cb","dweb:/ipfs/QmdH5yDiLyKmfs5iLqjbvgKDBsoWty6Wv9MMUWzhJDt4jP"],"license":"MIT"}},"version":1},"id":19}