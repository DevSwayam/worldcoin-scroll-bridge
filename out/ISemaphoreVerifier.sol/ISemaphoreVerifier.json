{"abi":[{"type":"function","name":"verifyProof","inputs":[{"name":"proof","type":"uint256[8]","internalType":"uint256[8]"},{"name":"input","type":"uint256[4]","internalType":"uint256[4]"}],"outputs":[],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"verifyProof(uint256[8],uint256[4])":"23572511"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[8]\",\"name\":\"proof\",\"type\":\"uint256[8]\"},{\"internalType\":\"uint256[4]\",\"name\":\"input\",\"type\":\"uint256[4]\"}],\"name\":\"verifyProof\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Worldcoin\",\"kind\":\"dev\",\"methods\":{\"verifyProof(uint256[8],uint256[4])\":{\"params\":{\"input\":\"the public input field elements in the scalar field Fr. Elements must be reduced.\",\"proof\":\"the points (A, B, C) in EIP-197 format matching the output of compressProof.\"}}},\"title\":\"Tree Verifier Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"verifyProof(uint256[8],uint256[4])\":{\"notice\":\"Verify an uncompressed Groth16 proof.Reverts with InvalidProof if the proof is invalid or with PublicInputNotInField the public input is not reduced.There is no return value. If the function does not revert, the proof was succesfully verified.\"}},\"notice\":\"An interface representing a merkle tree verifier.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISemaphoreVerifier.sol\":\"ISemaphoreVerifier\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@eth-optimism/contracts-bedrock/=node_modules/@eth-optimism/contracts-bedrock/\",\":@eth-optimism/contracts/=node_modules/@eth-optimism/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@rari-capital/solmate/=lib/solmate/\",\":@scroll-tech/contracts/=node_modules/@scroll-tech/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":fx-portal/contracts/=lib/contracts/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solmate/=lib/solmate/\",\":src/=src/\"]},\"sources\":{\"src/interfaces/ISemaphoreVerifier.sol\":{\"keccak256\":\"0x148cc393769ae9101bb83e6a3ad96b9ad4d3cfe3e603251b6b45e393154c4f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6caa4906d0823bf15a438a57acc2b63ef8ba86c411f979d712e75e6d883d585\",\"dweb:/ipfs/QmS6cmSQXYBC8zEyMan8pJDejahAM13sqNz8NfRb1QCmKs\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.16+commit.07a7930e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256[8]","name":"proof","type":"uint256[8]"},{"internalType":"uint256[4]","name":"input","type":"uint256[4]"}],"stateMutability":"view","type":"function","name":"verifyProof"}],"devdoc":{"kind":"dev","methods":{"verifyProof(uint256[8],uint256[4])":{"params":{"input":"the public input field elements in the scalar field Fr. Elements must be reduced.","proof":"the points (A, B, C) in EIP-197 format matching the output of compressProof."}}},"version":1},"userdoc":{"kind":"user","methods":{"verifyProof(uint256[8],uint256[4])":{"notice":"Verify an uncompressed Groth16 proof.Reverts with InvalidProof if the proof is invalid or with PublicInputNotInField the public input is not reduced.There is no return value. If the function does not revert, the proof was succesfully verified."}},"version":1}},"settings":{"remappings":["@eth-optimism/contracts-bedrock/=node_modules/@eth-optimism/contracts-bedrock/","@eth-optimism/contracts/=node_modules/@eth-optimism/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@prb/test/=lib/prb-test/src/","@rari-capital/solmate/=lib/solmate/","@scroll-tech/contracts/=node_modules/@scroll-tech/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","fx-portal/contracts/=lib/contracts/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","prb-test/=lib/prb-test/src/","solmate/=lib/solmate/","src/=src/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/interfaces/ISemaphoreVerifier.sol":"ISemaphoreVerifier"},"evmVersion":"london","libraries":{}},"sources":{"src/interfaces/ISemaphoreVerifier.sol":{"keccak256":"0x148cc393769ae9101bb83e6a3ad96b9ad4d3cfe3e603251b6b45e393154c4f49","urls":["bzz-raw://d6caa4906d0823bf15a438a57acc2b63ef8ba86c411f979d712e75e6d883d585","dweb:/ipfs/QmS6cmSQXYBC8zEyMan8pJDejahAM13sqNz8NfRb1QCmKs"],"license":"MIT"}},"version":1},"id":30}